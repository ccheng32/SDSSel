========== yelp.cpp ==========

COMPILE: g++ yelp.cpp -std=gnu++0x -O2 -o yelp
COMMAND: yelp -business business.json -review review.json -tip tip.json -user yuser.json -v 100 -c 10000 [-euclid]

-business, -review, -top, -user arguments are for the original input files

-v and -c are the maximum viewer and channels you want to sample

-euclid is a switch to use euclidean distance to measure the diversity,


OUTPUT:
standard output: an input file for algorithm program

stderr: a reference file with original user/channel name


EXAMPLE:

./yelp -business yelp_academic_dataset_business.json -review yelp_academic_dataset_review.json -tip yelp_academic_dataset_tip.json -user yelp_academic_dataset_user.json -v 100 -c 100 > input.txt 2> label.txt

./yelp -business yelp_academic_dataset_business.json -review yelp_academic_dataset_review.json -tip yelp_academic_dataset_tip.json -user yelp_academic_dataset_user.json -v 100 -c 10000 -euclid > input.txt 2> /dev/null

========== douban.cpp ==========

COMPILE: g++ douban.cpp -std=gnu++0x -O2 -o douban

COMMAND: douban -friend FRIEND_FILE -item ITEM_FILE -v V -c C

-friend and -item are the friendship input and item input

-v and -c are the maximum viewer and channels you want to sample

EXAMPLE:
./douban -friend douban_friendship.txt -item music_collection.csv -v 10 -c 10 > graph.txt 2> label.txt



========== SDSSel.cpp ==========

========== Compilation =========

g++ SDSSel_170223_test_time11.cpp -std=gnu++0x -O2 -lpthread -o SDSSel_170223_test_time11
g++ SDSSel_Weighted_F.cpp -std=gnu++0x -O2 -lpthread -o SDSSel_Weighted_F
g++ SDSSel_Thresh.cpp -std=gnu++0x -O2 -o SDSSel_Thresh

========== Execution ===========
./SDSSel_170223_test_time11 -h value_h -p value_p -c #processors [-prune1] [-prune2] [-skip-imp] [-skip-post] [-skip-diameter] < input.txt > ouput
./SDSSel_Weighted_F -h value_h -p value_p -c #processors [-skip-imp] [-skip-post] [-skip-diameter] < input.txt > ouput
./SDSSel_Thresh -h value_h -p value_p [-skip-imp] [-skip-post] [-skip-diameter] < input.txt > ouput

-h, -p are the parameters of the algorithm
they should be positive integers

-prune1, -prune2 are switches of the pruning strategies

EXAMPLE:
./SDSSel_170223_test_time11 -h 1 -p 10 -c 20 -prune1 -prune2 -skip-imp -skip-post -skip-diameter < input.txt > Output
./SDSSel_Weighted_F -h 1 -p 10 -c 20 -skip-imp -skip-post -skip-diameter < input.txt > ouput
./SDSSel_Thresh -h 1 -p 10 -c 20 -skip-imp -skip-post -skip-diameter < input.txt > ouput
./SDSSel_170223_test_time11 -h 10 -p 1 -prune2 < INPUT (turn on prune2, h=10, p=1)
./SDSSel_170223_test_time11 -h 1 -p 1 -prune1 -prune2 < INPUT (turn on both prunes, h = p = 1)


SAMPLE OUTPUT:
CPUTime main thread 101.317659, CPUTime 3055.520000, Wall clock time 136.000000, Viewer V cap 476, Preproc 674682, 1 1 50.482387 0 376.981132
11340 53
3687 1955 1238 1608 1287 1223 832 980 809 1251 537 805 409 293 298 268 224 283 321 445 336 306 572 219 26 130 112 507 141 255 126 

EXPALIN Of SAMPLE OUTPUT

1 1 50.482387 0 376.981132# the first line are formed by 6 numbers:

# 1.does the solution meet all the constraints (0 or 1)
# 2.does the solution meet all the constraints, without h-dense constraint (0 or 1)
# 3.the objective value
# 4.the farest distance of viewers that we chose (integer)
# 5.the average number of each channel's preference edges

#in second line there are two numbers, the set size of viewers and size of channels
11340 53

# the third and forth lines, are the viewers and channels in the solution
